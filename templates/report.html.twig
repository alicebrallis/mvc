{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>Kmom01</h1>
<h5>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.
</h5>
<p>Jag har tidigare läst en kurs i objektorienterad programmering med Python (OOPython). Under kursen lärde jag mig grunderna i objektorientering, inklusive skapande av klasser och objekt, arv, inkapsling. Jag har även använt Python för att skapa och använda egna klasser och objekt i olika projekt. Jag har en grundläggande förståelse för hur OOP fungerar och hur det kan användas för att skapa strukturerad och återanvändbar kod.</p>
<h5>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h5>
<p>I PHP, används klasser som mallar för att skapa objekt. Objekt är som enheter som kan utföra handlingar och lagra information. Klasser innehåller variabler (egenskaper) och funktioner (metoder) som objekt kan använda. En konstruktor används för att konfigurera objektet när det skapas. Med dessa grundläggande begrepp kan man komma igång med att skapa dina egna klasser och objekt i PHP för att organisera och strukturera din kod.</p>
<h5>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h5>
<p>Strukturen i uppgiften "me/report" verkar vara välorganiserad med användning av Symfony-ramverket. Genom att placera kärnkoden och logiken i src-mappen hålls den bort från den offentliga webbåtkomsten, som är public-mappen. Detta är en säkerhetsåtgärd för att skydda känslig kod och data.</p>
<h5>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.
</h5>
<p>PHP är ett programmeringsspråk som används för att bygga och hantera olika typer av webbapplikationer och program. Med PHP kan du organisera din kod på ett strukturerat sätt genom att använda objektorienterad programmering. Det innebär att du kan skapa återanvändbara "objekt" och använda dem för att utföra olika uppgifter.

PHP stöder också funktionell programmering, vilket låter dig använda funktioner på flexibla sätt. Till exempel kan du använda en funktion som om den vore en variabel eller låta funktioner interagera med varandra. Det tycker jag var mest värdefullt.</p>
<h5>Vilken är din TIL för detta kmom?</h5>
<p>Jag har börjat bygga upp strukturen för min webbapplikation och förstått hur man hanterar webbsidor och innehåll.

Jag tänker att nästa steg kan vara att utforska mer avancerade saker som objektorienterad programmering, hur man arbetar med databaser och hur man designar användargränssnitt. </p>


<h1>Kmom02</h1>
<h5>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h5>
<p>
I objektorienterad programmering används arv, komposition, interface och trait för att organisera och strukturera kod. Arv tillåter en klass att ärva egenskaper och metoder från en annan klass, vilket främjar återanvändning av kod och skapar hierarkier. Komposition innebär att en klass innehåller objekt av andra klasser, vilket ger flexibilitet i att sätta samman funktionalitet.

Interface definierar en kontrakt för klasser genom att specificera vilka metoder som måste implementeras. Det gör det enklare att byta ut eller lägga till nya klasser. Trait är en återanvändbar grupp av metoder som kan användas i olika klasser och ger en mekanism för horisontell återanvändning av kod.</p>

<h5>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h5>
<p>I min implementation för uppgiften använde jag mig av arv och interface. Jag skapade en grundläggande Card-klass och en Deck-klass som ärver från Card. Dessutom implementerade jag ett interface, SessionInterface, för att hantera sessionen och upprätthålla en deck i sessionen.

Jag är nöjd med min kod, men det finns alltid möjlighet till förbättring. Jag kan se att jag skulle kunna använda trait för att återanvända viss funktionalitet i olika klasser, vilket skulle göra koden ännu mer modulär.

</p>

<h5>Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</h5>
<p>Att jobba med Symfony och MVC har gett mig en bra struktur för att organisera och separera olika delar av koden. Det underlättar hanteringen och gör koden mer läsbar och underhållbar.</p>

<h5>Vilken är din TIL för detta kmom?</h5>
<p>Att använda komposition och interface i kombination ger en flexibel och modulär kodstruktur i Symfony-projekt.</p>

<h1>Kmom03</h1>
<h5>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h5>
<p>Modelleringen av kortspelet med flödesdiagram och pseudokod var en givande upplevelse. Det hjälpte mig att tydligt visualisera spelets logik och flöde innan jag började implementera det. Genom att skapa dessa modeller kunde jag bättre förstå spelets olika delar och identifiera potentiella problemområden innan jag började koda.</p>
<h5>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?</h5>
<p>Jag skapade en webbapplikation med Symfony för att spela kortspelet 21. Jag skapade olika klasser för kort, kortlek och spelare. Trots det är jag inte helt nöjd med resultatet. Jag stötte på problem med att organisera koden och implementera viss funktionalitet på det sätt jag hade tänkt från början. Koden kunde ha varit mer strukturerad och lättare att följa. Förbättringspotentialen ligger främst i att göra koden mer modulär och lättare att förstå.
Förbättringspotentialen i min kod ligger främst i att strukturera om koden för att göra den mer modulär och lättare att förstå. </p>
<h5>Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in i kursen?
</h5>
<p>
Hittills har min upplevelse av att arbeta med Symfony varit bra. Ramverket har många användbara verktyg och funktioner som gör det enklare att utveckla webbapplikationer och följa bästa praxis. Jag gillar speciellt att Symfony har en tydlig struktur och omfattande dokumentation, vilket gör det lättare att förstå och använda.</p>
<h5>Vilken är din TIL för detta kmom? </h5>
<p>Under detta kursmoment lärde jag mig vikten av att modellera och planera min kod innan jag börjar implementera den. Att använda flödesdiagram och pseudokod hjälpte mig att skapa en klar struktur och förståelse för problemet innan jag hoppade in i kodningen. Detta har hjälpt mig att arbeta mer effektivt och undvika vanliga misstag när jag utvecklar applikationer.</p>
{% endblock %}